# vars contexts has all environment variables (env, org, repo) available
# we can directly use vars or declare them as an env variable of this workflow (sort of declaration)
# vars.ENV_LEVEL_VAR -> Environment level vars and secrets are only availble when we specify which env to use in workflow
# number of vars / secrets (of any category) have limits, therefore we can use files (encrypt and decrypt)
# files can be encrypted and committed to github and workflow can use it and decrypt it using gpg & passphrase
# passphrase is secret and can be stored as repo secret

name: Variables & Secrets
on: [push]

jobs:
  encrypt-file:
    runs-on: ${{ vars.JOBS_RUNNER }}
    env:
      PASSPHRASE: ${{ secrets.PASSPHRASE }}
    steps:
      - uses: actions/checkout@v3
      - name: Decrypt file
        run: |
          mkdir $HOME/secrets
          gpg --quiet --batch --yes --decrypt --passphrase="$PASSPHRASE" --output $HOME/secret.json secret.json.gpg
      - name: View Encrypted File (NEVER DO THIS)
        run: cat $HOME/secrets/secret.json

  log-vars:
    runs-on: ${{ vars.JOBS_RUNNER }}
    environment: "staging"
    env:
      BOOLEAN_SECRET: ${{ secrets.BOOLEAN_SECRET }}
      ENV_LEVEL_VAR: ${{ vars.ENV_LEVEL_VAR }}
      REPO_LEVEL_VAR: ${{ vars.REPO_LEVEL_VAR }}
      ORG_LEVEL_VAR: ${{ vars.ORG_LEVEL_VAR }}
    steps:
      - name: Run only if BOOLEAN_SECRET is true
        if: env.BOOLEAN_SECRET == 'true'
        run: echo "I ran"
      - name: Log Vars
        run: |
          echo '${{ vars.JOBS_RUNNER }}'
          echo "ORG_LEVEL_VAR: $ORG_LEVEL_VAR"
          echo "REPO_LEVEL_VAR: $REPO_LEVEL_VAR"
          echo "ENV_LEVEL_VAR: $ENV_LEVEL_VAR"
