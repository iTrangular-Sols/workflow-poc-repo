# env variables like GITHUB_SHA, _REF, _ACTION... are also available as contexts
#diff between GITHUB_REF AND ${{ github.ref }} - first one is env variable of runner machine, it resides in runner machine, evaluated in runner machine
# second one (context) is evaluated in workflow by github action before sending the workflow to runner macine

#CUSTOM ENV VARIABLS CAN BE DEFINED ON WORKFLOW, JOBS, STEPS LEVEL, ENV CAN BE OVERRIDEN BY LOW LEVEL

#ENV CAN BE SET DYNAMICALLY BY WRITING TO A FILE IN RUNNER MACHINE (BELOW WAS HARDCODED IN env KEY)
#FILE PATH IS IN GITHUB_ENV -> FILE IS UNIQUE TO EACH STEP, SUBSEQUENT STEPS WILL HAVE ACCESS TO THIS VARIABLE
#CUSTOM ENV CAN BE SET AS MULTI-LINE

name: Environment Variables
on: [push]

env:
  WF_LEVEL_ENV: Available to all jobs

jobs:
  env-vars-and-context:
    runs-on: ubuntu-latest
    # if: $GITHUB_REF == 'refs/heads/main' WONT WORK SINCE ifs ARE EVALUATED BEFORE COMING TO RUNNER MACHINE
    # if: github.ref == 'rerfs/heads/main'
    env:
      JOB_LEVEL_ENV: Available to all steps
    steps:
      - name: Log ENVAR
        # below is not in quote as it is an expression to be evaluated in runner machine
        run: echo $GITHUB_REF
      - name: Log Context
        # below is in quote as the value in it is evaluated before sending to runner
        run: echo '${{ github.ref }}'
      - name: Set custom env var
        run: |
          echo "NEW_CUSTOM_ENV_VAR=$(date)" >> "$GITHUB_ENV"
          echo "JOB_LEVEL_ENV=$RANDOM" >> "$GITHUB_ENV"
      - name: Multiline Env Var
        run: |
          DELIMETER=1234
          echo "RANDOM_JOKE<<$DELIMETER" >> "$GITHUB_ENV"
          echo "A joke: " >> "$GITHUB_ENV"
          curl -s https://icanhazdadjoke.com/ >> "$GITHUB_ENV"
          echo "" >> "$GITHUB_ENV"
          echo "$DELIMETER" >> "$GITHUB_ENV"
      - name: Log custom env vars
        env:
          STEP_LEVEL_ENV: Step level env
          WF_LEVEL_ENV: WF level env overriden in step
        run: |
          echo '${{ env.WF_LEVEL_ENV }}'
          echo $JOB_LEVEL_ENV
          echo $STEP_LEVEL_ENV
          echo $NEW_CUSTOM_ENV_VAR
          echo $RANDOM_JOKE
